
Процедура ОбработкаПроведения(Отказ, Режим)
	
	// регистр Товары Расход
	Движения.Товары.Записывать = Истина;
	Движения.ПродажиПоАкциям.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.Товары.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Товар = ТекСтрокаТовары.Товар;
		Движение.Количество = ТекСтрокаТовары.Количество;
		Движение.Стоимость = ТекСтрокаТовары.Сумма;
		
		//Если НЕ Акция.Пустая() Тогда
			ДвижениеАкции = Движения.ПродажиПоАкциям.Добавить();
			ДвижениеАкции.Период = Дата;
			ДвижениеАкции.Товар = ТекСтрокаТовары.Товар;
			ДвижениеАкции.Количество = ТекСтрокаТовары.Количество;
			ДвижениеАкции.Стоимость = ТекСтрокаТовары.Сумма;
			ДвижениеАкции.Акция = Акция;
			ДвижениеАкции.Продавец = Продавец;
		//КонецЕсли;
		
	КонецЦикла;
	
	Движения.Записать();
	
	КонтрольОтрицательныхДвижений(Отказ);
	
	
	


КонецПроцедуры

Процедура КонтрольОтрицательныхДвижений(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТоварыОстатки.Товар,
	               |	ТоварыОстатки.КоличествоОстаток
	               |ИЗ
	               |	РегистрНакопления.Товары.Остатки(&ДатаДокумента, Товар.Ссылка В (&МассивТоваров)) КАК ТоварыОстатки
	               |ГДЕ
	               |	ТоварыОстатки.КоличествоОстаток < 0";
				   
	Запрос.УстановитьПараметр("МассивТоваров",Товары.ВыгрузитьКолонку("Товар"));
	Запрос.УстановитьПараметр("ДатаДокумента",КонецДня(ТекущаяДата()));
	Результат = Запрос.Выполнить();			   
	Если Не Результат.Пустой() Тогда
		
		Отказ = Истина;
		
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			СоббщениеДляПользователя = Новый СообщениеПользователю;
			СоббщениеДляПользователя.Текст = "Недостаточно товара " + Выборка.Товар + " не хватает " + Выборка.КоличествоОстаток * - 1;
			СоббщениеДляПользователя.Сообщить();

			//Сообщить("Недостаточно товара " + Выборка.Товар + " не достаточно " + Выборка.КоличествоОстаток * - 1);
		КонецЦикла;	
		
	КонецЕсли;	
	
КонецПроцедуры	