//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ПроверяетсяЧтоПользователюВыдалосьСообщениеСодержащиеТекст(Парам01)","ПроверяетсяЧтоПользователюВыдалосьСообщениеСодержащиеТекст","Тогда проверяется что пользователю выдалось сообщение содержащие текст ""ТекстСообщения""");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Тогда проверяется что пользователю выдалось сообщение содержащие текст "ТекстСообщения"
//@ПроверяетсяЧтоПользователюВыдалосьСообщениеСодержащиеТекст(Парам01)
Процедура ПроверяетсяЧтоПользователюВыдалосьСообщениеСодержащиеТекст(ТекстСообщения) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	//ВызватьИсключение "Не реализовано.";
	ТекстНайден = Ложь;
	
	АктивноеОкно  = КонтекстСохраняемый.ТестовоеПриложение.ПолучитьАктивноеОкно();
	МассивСообщениий = АктивноеОкно.ПолучитьТекстыСообщенийПользователю();
	Для каждого СообщениеПользователя Из МассивСообщениий Цикл
		Если СтрНайти(СообщениеПользователя,ТекстСообщения) > 0 Тогда
			ТекстНайден = Истина;
			Прервать;
		КонецЕсли;	 
	КонецЦикла;
	
	Если Не ТекстНайден Тогда
		ВызватьИсключение "Пользователю не выдалось сообщение : `" + ТекстСообщения + "`";
	КонецЕсли;	 
	
КонецПроцедуры

//окончание текста модуля