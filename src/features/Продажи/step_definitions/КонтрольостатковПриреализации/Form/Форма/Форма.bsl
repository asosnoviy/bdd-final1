//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ДокументСНомеромНеПроводится(Парам01,Парам02)","ДокументСНомеромНеПроводится","Тогда документ ""Продажа"" с номером ""000000001"" не проводится");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Тогда документ "Продажа" с номером "000000001" не проводится
//@ДокументСНомеромНеПроводится(Парам01,Парам02)
Процедура ДокументСНомеромНеПроводится(ИмяДокумента,НомерДОкумента) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	Если ДокументПроведен(ИмяДокумента,НомерДокумента) Тогда
		
		ВызватьИсключение "Документ " + ИмяДокумента + " " + НомерДОкумента + " должен быть не проведен";
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Функция ДокументПроведен(ИмяДокумента,НомерДокумента)
	
	 ДокументСсылка = Документы[ИмяДокумента].НайтиПоНомеру(НомерДокумента,ТекущаяДата());
	 
	 Если ДокументСсылка = Неопределено Тогда
		 
		 ВызватьИсключение "Документ " + ИмяДокумента + " " + НомерДОкумента + " не найден";
 
	 КонецЕсли;	 
	 
	 Возврат ДокументСсылка.Проведен;
	 
КонецФункции	

//окончание текста модуля